FROM node:18

WORKDIR /usr/src/app

# Install system dependencies, including WebGL support
RUN apt-get update && \
  apt-get install -y \
  ffmpeg \
  libnss3 \
  libxss1 \
  libasound2 \
  libatk1.0-0 \
  libatk-bridge2.0-0 \
  libcups2 \
  libxkbcommon-x11-0 \
  libgbm-dev \
  libgl1-mesa-dri \
  libgl1-mesa-glx \
  mesa-utils \
  xvfb \
  wget \
  gnupg \
  xorg \
  xserver-xorg \
  libx11-dev \
  libxext-dev \
  # Debug tools
  procps \
  htop \
  strace \
  lsof \
  curl \
  vim \
  && rm -rf /var/lib/apt/lists/*

# Install Google Chrome with better error handling
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-linux-signing-key.gpg && \
  ARCH=$(dpkg --print-architecture) && \
  echo "Architecture detected: $ARCH" && \
  if [ "$ARCH" = "amd64" ]; then \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux-signing-key.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list; \
  elif [ "$ARCH" = "arm64" ]; then \
    echo "deb [arch=arm64 signed-by=/usr/share/keyrings/google-linux-signing-key.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list; \
  else \
    echo "deb [signed-by=/usr/share/keyrings/google-linux-signing-key.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list; \
  fi && \
  apt-get update && \
  echo "Attempting to install Google Chrome..." && \
  apt-get install -y google-chrome-stable || \
  (echo "Google Chrome install failed, installing Chromium..." && apt-get install -y chromium) && \
  rm -rf /var/lib/apt/lists/*

# Copy Chrome policy to allow protocol launching
RUN mkdir -p /etc/opt/chrome/policies/managed
COPY auto_launch_protocols.json /etc/opt/chrome/policies/managed/auto_launch_protocols.json

# Install global tools
RUN npm install -g nodemon

# Install dependencies
COPY package*.json ./
RUN npm install

# Install Playwright and its dependencies with verbose output
RUN npx playwright install --with-deps --verbose

# Copy application code
COPY . .

# Build app
RUN npm run build

# Set permissions
RUN chmod +x /usr/src/app/start.sh

# Create debug script
RUN echo '#!/bin/bash\n\
echo "=== DEBUG INFO ==="\n\
echo "Architecture: $(dpkg --print-architecture)"\n\
echo "Node version: $(node --version)"\n\
echo "NPM version: $(npm --version)"\n\
echo "Chrome version: $(google-chrome --version 2>/dev/null || chromium --version 2>/dev/null || echo "No Chrome found")"\n\
echo "Playwright browsers:"\n\
ls -la ~/.cache/ms-playwright/ 2>/dev/null || echo "No Playwright browsers found"\n\
echo "System libraries:"\n\
ldd $(which google-chrome 2>/dev/null || which chromium 2>/dev/null || echo "/usr/bin/echo") 2>/dev/null || echo "Cannot check library dependencies"\n\
echo "=== END DEBUG INFO ==="\n\
exec "$@"' > /usr/local/bin/debug-wrapper && chmod +x /usr/local/bin/debug-wrapper

EXPOSE 3000

# Use debug wrapper
ENTRYPOINT ["/usr/local/bin/debug-wrapper"]
CMD ["node", "dist/index.js"] 